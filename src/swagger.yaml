---
  openapi: 3.0.0
  info:
    version: '1.0'
    title: Data Exchange API
    description: To invoke the API programmatically, include the API key as Bearer token in the authorization header.
  servers:
    - url: /api/v1
  paths:
    /id:
      get:
        tags:
          - ID
        description: Peer information
        responses:
          '200':
            description: Peer information
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PeerInformation'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    /status:
      get:
        tags:
          - Status
        description: Status
        responses:
          '200':
            description: Status
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'  
    /peers:
      get:
        tags:
          - Peers
        description: List peers
        responses:
          '200':
            description: Peers
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Peers'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'  
    /peers/{id}:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: Peer id
      put:
        tags:
          - Peers
        description: Add peer
        responses:
          '200':
            description: Peer added
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Added'
          '400':
            description: Missing peer endpoint
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
      delete:
        tags:
          - Peers
        description: Remove peer
        responses:
          '200':
            description: Peer removed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Removed'
          '404':
            description: Peer not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
    /messages:
      post:
        tags:
          - Messages
        description: Send message
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        responses:
          '200':
            description: Message submitted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Submitted'
          '400':
            description: Invalid message or recipient
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'   
    /blobs/{blobPath}:
      parameters:
      - in: path
        name: blobPath
        required: true
        schema:
          type: string
        description: Blob path
      head:
        tags:
          - Blobs
        description: Retrieve blob metadata
        responses:
          '204':
            description: Blob metadata
            headers:
              dx-hash:
                schema:
                  type: string
                description: Blob hash
              dx-last-update:
                schema:
                  type: string
                description: Blob last update timestamp
          '404':
            description: Blob not found
          '500':
            description: Internal error
      get:
        tags:
          - Blobs
        description: Retrieve blob
        responses:
          '200':
            description: Blob content
            headers:
              dx-hash:
                schema:
                  type: string
                description: Blob hash
              dx-last-update:
                schema:
                  type: string
                description: Blob last update timestamp
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '404':
            description: Blob not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      put:
        tags:
          - Blobs
        description: Store blob
        requestBody:
          description: Blob
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  fileName:
                    type: string
                    format: binary
        responses:
          '200':
            description: Blob hash
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BlobHash'
          '400':
            description: Missing blob
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    /transfers:
      post:
        tags:
          - Transfers
        description: Transfer blob
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        responses:
          '200':
            description: Transfer submitted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Submitted'
          '400':
            description: Invalid path or recipient
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Blob not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'           
  components:
    securitySchemes:
      ApiKeyAuth:
        type: apiKey
        in: header
        name: X-API-KEY
    schemas:
      PeerInformation:
        type: object
        required:
          - id
          - endpoint
          - cert
        properties:
          id:
            type: string
          endpoint:
            type: string
          cert:
            type: string
      Status:
        type: object
        required:
          - messageQueueSize
          - peers
        properties:
          messageQueueSize:
            type: integer
          peers:
            type: array
            items:
              type: object
              required:
                - id
                - available
              properties:
                id:
                  type: string
                available:
                  type: boolean
      Peer:
        type: object
        required:
          - id
          - endpoint
        properties:
          id:
            type: string
          endpoint:
            type: string
      Peers:
        type: array
        items:
          $ref: '#/components/schemas/Peer'
      Added:
        type: object
        required:
          - status
        properties:
          status:
            type: string
            enum: ['added']
      Removed:
        type: object
        required:
          - status
        properties:
          status:
            type: string
            enum: ['removed']
      Message:
        type: object
        required:
          - message
          - recipient
        properties:
          message:
            type: string
          recipient:
            type: string
          requestId:
            type: string
      BlobHash:
        type: object
        required:
          - hash
        properties:
          hash:
            type: string
      Transfer:
        type: object
        required:
          - path
          - recipient
        properties:
          path:
            type: string
          recipient:
            type: string
          requestId:
            type: string
      Submitted:
        type: object
        required:
          - requestId
        properties:
          requestId:
            type: string
      Error:
        type: object
        required:
          - error
        properties:
          error:
            type: string
  security:
    - ApiKeyAuth: [] 